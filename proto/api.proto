syntax = "proto3";

package UNNCA;

// option python_package = "./hootrhino_unnca";
// option java_package = "hootrhino.unnca";
// option go_package = "./hootrhino_unnca";


// 请求结构体定义
message DetectRequest {
    int32 width = 1;      // width
    int32 height = 2;     // height
    bytes data = 3;       // 指向的数据（例如图像数据）
}

// 单个检测框定义
message Box {
    int32 x = 1;          // 检测框的 x 坐标
    int32 y = 2;          // 检测框的 y 坐标
    int32 width = 3;      // 检测框的宽度
    int32 height = 4;     // 检测框的高度
    float confidence = 5; // 置信度 (prop)
    string label = 6;     // 标签信息，最多 40 个字符
}

// 返回结构体定义
message DetectResponse {
    int32 box_count = 1;   // 检测到的框的数量
    repeated Box boxes = 2; // 检测到的框列表，最多 20 个
}

// 心跳包
message AuthRequest {
    string uuid = 1; // 设备唯一标识
}
// 心跳包返回
message AuthResponse  {
    int32 code = 1;  // 状态码
    string msg = 2; // 设备唯一标识
}
// 心跳包
message PingRequest {
    int32 code = 1;  // 状态码
    string uuid = 2; // 设备唯一标识
}
// 心跳包返回
message PingResponse  {
    int32 status = 1; // 状态码
}
// 获取设备信息
message AcceleratorInfoRequest {
}

// 获取设备信息返回
message AcceleratorInfoResponse {
    string version = 1;// 版本号
    string vendor = 2; // 厂家
    string model = 3;  // 型号
    string name = 4;   // 名称
    string uuid = 5;   // 设备唯一标识
}
// 通用的消息
message RpcRequest {
    oneof request {
        AuthRequest auth_request = 1;
        PingRequest ping_request = 2;
        DetectRequest detect_request = 3;
        AcceleratorInfoRequest accelerator_info_request = 4;
    }
}
// 错误信息
message ErrorRequest  {
}
// 错误信息
message ErrorResponse  {
    int32 code = 1;  // 状态码
    string msg = 2; // 设备唯一标识
}
// 通用的消息
message RpcResponse {
    oneof response {
        AuthResponse auth_response = 1;
        PingResponse ping_response = 2;
        DetectResponse detect_response = 3;
        AcceleratorInfoResponse accelerator_info_response = 4;
        ErrorResponse error_response = 5;
    }
}

// 定义服务接口
service DetectionService {
    // 认证接口
    rpc Auth(AuthRequest) returns (AuthResponse);
    // 检测接口
    rpc Detect(DetectRequest) returns (DetectResponse);
    // 心跳接口
    rpc Ping(PingRequest) returns (PingResponse);
    // 错误信息
    rpc Error(ErrorRequest) returns (ErrorResponse);
    // 获取设备信息
    rpc AcceleratorInfo(AcceleratorInfoRequest) returns (AcceleratorInfoResponse);
}
