/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: api.proto */

#ifndef PROTOBUF_C_api_2eproto__INCLUDED
#define PROTOBUF_C_api_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _UNNCA__Request UNNCA__Request;
typedef struct _UNNCA__Box UNNCA__Box;
typedef struct _UNNCA__Response UNNCA__Response;
typedef struct _UNNCA__AuthRequest UNNCA__AuthRequest;
typedef struct _UNNCA__AuthResponse UNNCA__AuthResponse;
typedef struct _UNNCA__PingRequest UNNCA__PingRequest;
typedef struct _UNNCA__PingResponse UNNCA__PingResponse;
typedef struct _UNNCA__GetAcceleratorInfoRequest UNNCA__GetAcceleratorInfoRequest;
typedef struct _UNNCA__GetAcceleratorInfoResponse UNNCA__GetAcceleratorInfoResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * 请求结构体定义
 */
struct  _UNNCA__Request
{
  ProtobufCMessage base;
  /*
   * width
   */
  int32_t width;
  /*
   * height
   */
  int32_t height;
  /*
   * 指向的数据（例如图像数据）
   */
  ProtobufCBinaryData data;
};
#define UNNCA__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__request__descriptor) \
    , 0, 0, {0,NULL} }


/*
 * 单个检测框定义
 */
struct  _UNNCA__Box
{
  ProtobufCMessage base;
  /*
   * 检测框的 x 坐标
   */
  int32_t x;
  /*
   * 检测框的 y 坐标
   */
  int32_t y;
  /*
   * 检测框的宽度
   */
  int32_t width;
  /*
   * 检测框的高度
   */
  int32_t height;
  /*
   * 置信度 (prop)
   */
  float confidence;
  /*
   * 标签信息，最多 40 个字符
   */
  char *label;
};
#define UNNCA__BOX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__box__descriptor) \
    , 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string }


/*
 * 返回结构体定义
 */
struct  _UNNCA__Response
{
  ProtobufCMessage base;
  /*
   * 检测到的框的数量
   */
  int32_t box_count;
  /*
   * 检测到的框列表，最多 20 个
   */
  size_t n_boxes;
  UNNCA__Box **boxes;
};
#define UNNCA__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__response__descriptor) \
    , 0, 0,NULL }


/*
 * 心跳包
 */
struct  _UNNCA__AuthRequest
{
  ProtobufCMessage base;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define UNNCA__AUTH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__auth_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 心跳包返回
 */
struct  _UNNCA__AuthResponse
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t code;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define UNNCA__AUTH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__auth_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * 心跳包
 */
struct  _UNNCA__PingRequest
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t code;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define UNNCA__PING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__ping_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * 心跳包返回
 */
struct  _UNNCA__PingResponse
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t status;
};
#define UNNCA__PING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__ping_response__descriptor) \
    , 0 }


/*
 * 获取设备信息
 */
struct  _UNNCA__GetAcceleratorInfoRequest
{
  ProtobufCMessage base;
};
#define UNNCA__GET_ACCELERATOR_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__get_accelerator_info_request__descriptor) \
     }


/*
 * 获取设备信息返回
 */
struct  _UNNCA__GetAcceleratorInfoResponse
{
  ProtobufCMessage base;
  /*
   * 版本号
   */
  char *version;
  /*
   * 厂家
   */
  char *vendor;
  /*
   * 型号
   */
  char *model;
  /*
   * 名称
   */
  char *name;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define UNNCA__GET_ACCELERATOR_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&unnca__get_accelerator_info_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* UNNCA__Request methods */
void   unnca__request__init
                     (UNNCA__Request         *message);
size_t unnca__request__get_packed_size
                     (const UNNCA__Request   *message);
size_t unnca__request__pack
                     (const UNNCA__Request   *message,
                      uint8_t             *out);
size_t unnca__request__pack_to_buffer
                     (const UNNCA__Request   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__Request *
       unnca__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__request__free_unpacked
                     (UNNCA__Request *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__Box methods */
void   unnca__box__init
                     (UNNCA__Box         *message);
size_t unnca__box__get_packed_size
                     (const UNNCA__Box   *message);
size_t unnca__box__pack
                     (const UNNCA__Box   *message,
                      uint8_t             *out);
size_t unnca__box__pack_to_buffer
                     (const UNNCA__Box   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__Box *
       unnca__box__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__box__free_unpacked
                     (UNNCA__Box *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__Response methods */
void   unnca__response__init
                     (UNNCA__Response         *message);
size_t unnca__response__get_packed_size
                     (const UNNCA__Response   *message);
size_t unnca__response__pack
                     (const UNNCA__Response   *message,
                      uint8_t             *out);
size_t unnca__response__pack_to_buffer
                     (const UNNCA__Response   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__Response *
       unnca__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__response__free_unpacked
                     (UNNCA__Response *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__AuthRequest methods */
void   unnca__auth_request__init
                     (UNNCA__AuthRequest         *message);
size_t unnca__auth_request__get_packed_size
                     (const UNNCA__AuthRequest   *message);
size_t unnca__auth_request__pack
                     (const UNNCA__AuthRequest   *message,
                      uint8_t             *out);
size_t unnca__auth_request__pack_to_buffer
                     (const UNNCA__AuthRequest   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__AuthRequest *
       unnca__auth_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__auth_request__free_unpacked
                     (UNNCA__AuthRequest *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__AuthResponse methods */
void   unnca__auth_response__init
                     (UNNCA__AuthResponse         *message);
size_t unnca__auth_response__get_packed_size
                     (const UNNCA__AuthResponse   *message);
size_t unnca__auth_response__pack
                     (const UNNCA__AuthResponse   *message,
                      uint8_t             *out);
size_t unnca__auth_response__pack_to_buffer
                     (const UNNCA__AuthResponse   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__AuthResponse *
       unnca__auth_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__auth_response__free_unpacked
                     (UNNCA__AuthResponse *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__PingRequest methods */
void   unnca__ping_request__init
                     (UNNCA__PingRequest         *message);
size_t unnca__ping_request__get_packed_size
                     (const UNNCA__PingRequest   *message);
size_t unnca__ping_request__pack
                     (const UNNCA__PingRequest   *message,
                      uint8_t             *out);
size_t unnca__ping_request__pack_to_buffer
                     (const UNNCA__PingRequest   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__PingRequest *
       unnca__ping_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__ping_request__free_unpacked
                     (UNNCA__PingRequest *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__PingResponse methods */
void   unnca__ping_response__init
                     (UNNCA__PingResponse         *message);
size_t unnca__ping_response__get_packed_size
                     (const UNNCA__PingResponse   *message);
size_t unnca__ping_response__pack
                     (const UNNCA__PingResponse   *message,
                      uint8_t             *out);
size_t unnca__ping_response__pack_to_buffer
                     (const UNNCA__PingResponse   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__PingResponse *
       unnca__ping_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__ping_response__free_unpacked
                     (UNNCA__PingResponse *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__GetAcceleratorInfoRequest methods */
void   unnca__get_accelerator_info_request__init
                     (UNNCA__GetAcceleratorInfoRequest         *message);
size_t unnca__get_accelerator_info_request__get_packed_size
                     (const UNNCA__GetAcceleratorInfoRequest   *message);
size_t unnca__get_accelerator_info_request__pack
                     (const UNNCA__GetAcceleratorInfoRequest   *message,
                      uint8_t             *out);
size_t unnca__get_accelerator_info_request__pack_to_buffer
                     (const UNNCA__GetAcceleratorInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__GetAcceleratorInfoRequest *
       unnca__get_accelerator_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__get_accelerator_info_request__free_unpacked
                     (UNNCA__GetAcceleratorInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* UNNCA__GetAcceleratorInfoResponse methods */
void   unnca__get_accelerator_info_response__init
                     (UNNCA__GetAcceleratorInfoResponse         *message);
size_t unnca__get_accelerator_info_response__get_packed_size
                     (const UNNCA__GetAcceleratorInfoResponse   *message);
size_t unnca__get_accelerator_info_response__pack
                     (const UNNCA__GetAcceleratorInfoResponse   *message,
                      uint8_t             *out);
size_t unnca__get_accelerator_info_response__pack_to_buffer
                     (const UNNCA__GetAcceleratorInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
UNNCA__GetAcceleratorInfoResponse *
       unnca__get_accelerator_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   unnca__get_accelerator_info_response__free_unpacked
                     (UNNCA__GetAcceleratorInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UNNCA__Request_Closure)
                 (const UNNCA__Request *message,
                  void *closure_data);
typedef void (*UNNCA__Box_Closure)
                 (const UNNCA__Box *message,
                  void *closure_data);
typedef void (*UNNCA__Response_Closure)
                 (const UNNCA__Response *message,
                  void *closure_data);
typedef void (*UNNCA__AuthRequest_Closure)
                 (const UNNCA__AuthRequest *message,
                  void *closure_data);
typedef void (*UNNCA__AuthResponse_Closure)
                 (const UNNCA__AuthResponse *message,
                  void *closure_data);
typedef void (*UNNCA__PingRequest_Closure)
                 (const UNNCA__PingRequest *message,
                  void *closure_data);
typedef void (*UNNCA__PingResponse_Closure)
                 (const UNNCA__PingResponse *message,
                  void *closure_data);
typedef void (*UNNCA__GetAcceleratorInfoRequest_Closure)
                 (const UNNCA__GetAcceleratorInfoRequest *message,
                  void *closure_data);
typedef void (*UNNCA__GetAcceleratorInfoResponse_Closure)
                 (const UNNCA__GetAcceleratorInfoResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _UNNCA__DetectionService_Service UNNCA__DetectionService_Service;
struct _UNNCA__DetectionService_Service
{
  ProtobufCService base;
  void (*auth)(UNNCA__DetectionService_Service *service,
               const UNNCA__AuthRequest *input,
               UNNCA__AuthResponse_Closure closure,
               void *closure_data);
  void (*detect)(UNNCA__DetectionService_Service *service,
                 const UNNCA__Request *input,
                 UNNCA__Response_Closure closure,
                 void *closure_data);
  void (*ping)(UNNCA__DetectionService_Service *service,
               const UNNCA__PingRequest *input,
               UNNCA__PingResponse_Closure closure,
               void *closure_data);
  void (*get_accelerator_info)(UNNCA__DetectionService_Service *service,
                               const UNNCA__GetAcceleratorInfoRequest *input,
                               UNNCA__GetAcceleratorInfoResponse_Closure closure,
                               void *closure_data);
};
typedef void (*UNNCA__DetectionService_ServiceDestroy)(UNNCA__DetectionService_Service *);
void unnca__detection_service__init (UNNCA__DetectionService_Service *service,
                                     UNNCA__DetectionService_ServiceDestroy destroy);
#define UNNCA__DETECTION_SERVICE__BASE_INIT \
    { &unnca__detection_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define UNNCA__DETECTION_SERVICE__INIT(function_prefix__) \
    { UNNCA__DETECTION_SERVICE__BASE_INIT,\
      function_prefix__ ## auth,\
      function_prefix__ ## detect,\
      function_prefix__ ## ping,\
      function_prefix__ ## get_accelerator_info  }
void unnca__detection_service__auth(ProtobufCService *service,
                                    const UNNCA__AuthRequest *input,
                                    UNNCA__AuthResponse_Closure closure,
                                    void *closure_data);
void unnca__detection_service__detect(ProtobufCService *service,
                                      const UNNCA__Request *input,
                                      UNNCA__Response_Closure closure,
                                      void *closure_data);
void unnca__detection_service__ping(ProtobufCService *service,
                                    const UNNCA__PingRequest *input,
                                    UNNCA__PingResponse_Closure closure,
                                    void *closure_data);
void unnca__detection_service__get_accelerator_info(ProtobufCService *service,
                                                    const UNNCA__GetAcceleratorInfoRequest *input,
                                                    UNNCA__GetAcceleratorInfoResponse_Closure closure,
                                                    void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor unnca__request__descriptor;
extern const ProtobufCMessageDescriptor unnca__box__descriptor;
extern const ProtobufCMessageDescriptor unnca__response__descriptor;
extern const ProtobufCMessageDescriptor unnca__auth_request__descriptor;
extern const ProtobufCMessageDescriptor unnca__auth_response__descriptor;
extern const ProtobufCMessageDescriptor unnca__ping_request__descriptor;
extern const ProtobufCMessageDescriptor unnca__ping_response__descriptor;
extern const ProtobufCMessageDescriptor unnca__get_accelerator_info_request__descriptor;
extern const ProtobufCMessageDescriptor unnca__get_accelerator_info_response__descriptor;
extern const ProtobufCServiceDescriptor unnca__detection_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_api_2eproto__INCLUDED */
