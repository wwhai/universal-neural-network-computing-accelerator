/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: api.proto */

#ifndef PROTOBUF_C_api_2eproto__INCLUDED
#define PROTOBUF_C_api_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Detection__Request Detection__Request;
typedef struct _Detection__Box Detection__Box;
typedef struct _Detection__Response Detection__Response;
typedef struct _Detection__AuthRequest Detection__AuthRequest;
typedef struct _Detection__AuthResponse Detection__AuthResponse;
typedef struct _Detection__PingRequest Detection__PingRequest;
typedef struct _Detection__PingResponse Detection__PingResponse;
typedef struct _Detection__GetAcceleratorInfoRequest Detection__GetAcceleratorInfoRequest;
typedef struct _Detection__GetAcceleratorInfoResponse Detection__GetAcceleratorInfoResponse;


/* --- enums --- */


/* --- messages --- */

/*
 * 请求结构体定义
 */
struct  _Detection__Request
{
  ProtobufCMessage base;
  /*
   * width
   */
  int32_t width;
  /*
   * height
   */
  int32_t height;
  /*
   * 指向的数据（例如图像数据）
   */
  ProtobufCBinaryData data;
};
#define DETECTION__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__request__descriptor) \
    , 0, 0, {0,NULL} }


/*
 * 单个检测框定义
 */
struct  _Detection__Box
{
  ProtobufCMessage base;
  /*
   * 检测框的 x 坐标
   */
  int32_t x;
  /*
   * 检测框的 y 坐标
   */
  int32_t y;
  /*
   * 检测框的宽度
   */
  int32_t width;
  /*
   * 检测框的高度
   */
  int32_t height;
  /*
   * 置信度 (prop)
   */
  float confidence;
  /*
   * 标签信息，最多 40 个字符
   */
  char *label;
};
#define DETECTION__BOX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__box__descriptor) \
    , 0, 0, 0, 0, 0, (char *)protobuf_c_empty_string }


/*
 * 返回结构体定义
 */
struct  _Detection__Response
{
  ProtobufCMessage base;
  /*
   * 检测到的框的数量
   */
  int32_t box_count;
  /*
   * 检测到的框列表，最多 20 个
   */
  size_t n_boxes;
  Detection__Box **boxes;
};
#define DETECTION__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__response__descriptor) \
    , 0, 0,NULL }


/*
 * 心跳包
 */
struct  _Detection__AuthRequest
{
  ProtobufCMessage base;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define DETECTION__AUTH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__auth_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * 心跳包返回
 */
struct  _Detection__AuthResponse
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t code;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define DETECTION__AUTH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__auth_response__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * 心跳包
 */
struct  _Detection__PingRequest
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t code;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define DETECTION__PING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__ping_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string }


/*
 * 心跳包返回
 */
struct  _Detection__PingResponse
{
  ProtobufCMessage base;
  /*
   * 状态码
   */
  int32_t status;
};
#define DETECTION__PING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__ping_response__descriptor) \
    , 0 }


/*
 * 获取设备信息
 */
struct  _Detection__GetAcceleratorInfoRequest
{
  ProtobufCMessage base;
};
#define DETECTION__GET_ACCELERATOR_INFO_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__get_accelerator_info_request__descriptor) \
     }


/*
 * 获取设备信息返回
 */
struct  _Detection__GetAcceleratorInfoResponse
{
  ProtobufCMessage base;
  /*
   * 版本号
   */
  char *version;
  /*
   * 厂家
   */
  char *vendor;
  /*
   * 型号
   */
  char *model;
  /*
   * 名称
   */
  char *name;
  /*
   * 设备唯一标识
   */
  char *uuid;
};
#define DETECTION__GET_ACCELERATOR_INFO_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&detection__get_accelerator_info_response__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Detection__Request methods */
void   detection__request__init
                     (Detection__Request         *message);
size_t detection__request__get_packed_size
                     (const Detection__Request   *message);
size_t detection__request__pack
                     (const Detection__Request   *message,
                      uint8_t             *out);
size_t detection__request__pack_to_buffer
                     (const Detection__Request   *message,
                      ProtobufCBuffer     *buffer);
Detection__Request *
       detection__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__request__free_unpacked
                     (Detection__Request *message,
                      ProtobufCAllocator *allocator);
/* Detection__Box methods */
void   detection__box__init
                     (Detection__Box         *message);
size_t detection__box__get_packed_size
                     (const Detection__Box   *message);
size_t detection__box__pack
                     (const Detection__Box   *message,
                      uint8_t             *out);
size_t detection__box__pack_to_buffer
                     (const Detection__Box   *message,
                      ProtobufCBuffer     *buffer);
Detection__Box *
       detection__box__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__box__free_unpacked
                     (Detection__Box *message,
                      ProtobufCAllocator *allocator);
/* Detection__Response methods */
void   detection__response__init
                     (Detection__Response         *message);
size_t detection__response__get_packed_size
                     (const Detection__Response   *message);
size_t detection__response__pack
                     (const Detection__Response   *message,
                      uint8_t             *out);
size_t detection__response__pack_to_buffer
                     (const Detection__Response   *message,
                      ProtobufCBuffer     *buffer);
Detection__Response *
       detection__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__response__free_unpacked
                     (Detection__Response *message,
                      ProtobufCAllocator *allocator);
/* Detection__AuthRequest methods */
void   detection__auth_request__init
                     (Detection__AuthRequest         *message);
size_t detection__auth_request__get_packed_size
                     (const Detection__AuthRequest   *message);
size_t detection__auth_request__pack
                     (const Detection__AuthRequest   *message,
                      uint8_t             *out);
size_t detection__auth_request__pack_to_buffer
                     (const Detection__AuthRequest   *message,
                      ProtobufCBuffer     *buffer);
Detection__AuthRequest *
       detection__auth_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__auth_request__free_unpacked
                     (Detection__AuthRequest *message,
                      ProtobufCAllocator *allocator);
/* Detection__AuthResponse methods */
void   detection__auth_response__init
                     (Detection__AuthResponse         *message);
size_t detection__auth_response__get_packed_size
                     (const Detection__AuthResponse   *message);
size_t detection__auth_response__pack
                     (const Detection__AuthResponse   *message,
                      uint8_t             *out);
size_t detection__auth_response__pack_to_buffer
                     (const Detection__AuthResponse   *message,
                      ProtobufCBuffer     *buffer);
Detection__AuthResponse *
       detection__auth_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__auth_response__free_unpacked
                     (Detection__AuthResponse *message,
                      ProtobufCAllocator *allocator);
/* Detection__PingRequest methods */
void   detection__ping_request__init
                     (Detection__PingRequest         *message);
size_t detection__ping_request__get_packed_size
                     (const Detection__PingRequest   *message);
size_t detection__ping_request__pack
                     (const Detection__PingRequest   *message,
                      uint8_t             *out);
size_t detection__ping_request__pack_to_buffer
                     (const Detection__PingRequest   *message,
                      ProtobufCBuffer     *buffer);
Detection__PingRequest *
       detection__ping_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__ping_request__free_unpacked
                     (Detection__PingRequest *message,
                      ProtobufCAllocator *allocator);
/* Detection__PingResponse methods */
void   detection__ping_response__init
                     (Detection__PingResponse         *message);
size_t detection__ping_response__get_packed_size
                     (const Detection__PingResponse   *message);
size_t detection__ping_response__pack
                     (const Detection__PingResponse   *message,
                      uint8_t             *out);
size_t detection__ping_response__pack_to_buffer
                     (const Detection__PingResponse   *message,
                      ProtobufCBuffer     *buffer);
Detection__PingResponse *
       detection__ping_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__ping_response__free_unpacked
                     (Detection__PingResponse *message,
                      ProtobufCAllocator *allocator);
/* Detection__GetAcceleratorInfoRequest methods */
void   detection__get_accelerator_info_request__init
                     (Detection__GetAcceleratorInfoRequest         *message);
size_t detection__get_accelerator_info_request__get_packed_size
                     (const Detection__GetAcceleratorInfoRequest   *message);
size_t detection__get_accelerator_info_request__pack
                     (const Detection__GetAcceleratorInfoRequest   *message,
                      uint8_t             *out);
size_t detection__get_accelerator_info_request__pack_to_buffer
                     (const Detection__GetAcceleratorInfoRequest   *message,
                      ProtobufCBuffer     *buffer);
Detection__GetAcceleratorInfoRequest *
       detection__get_accelerator_info_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__get_accelerator_info_request__free_unpacked
                     (Detection__GetAcceleratorInfoRequest *message,
                      ProtobufCAllocator *allocator);
/* Detection__GetAcceleratorInfoResponse methods */
void   detection__get_accelerator_info_response__init
                     (Detection__GetAcceleratorInfoResponse         *message);
size_t detection__get_accelerator_info_response__get_packed_size
                     (const Detection__GetAcceleratorInfoResponse   *message);
size_t detection__get_accelerator_info_response__pack
                     (const Detection__GetAcceleratorInfoResponse   *message,
                      uint8_t             *out);
size_t detection__get_accelerator_info_response__pack_to_buffer
                     (const Detection__GetAcceleratorInfoResponse   *message,
                      ProtobufCBuffer     *buffer);
Detection__GetAcceleratorInfoResponse *
       detection__get_accelerator_info_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   detection__get_accelerator_info_response__free_unpacked
                     (Detection__GetAcceleratorInfoResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Detection__Request_Closure)
                 (const Detection__Request *message,
                  void *closure_data);
typedef void (*Detection__Box_Closure)
                 (const Detection__Box *message,
                  void *closure_data);
typedef void (*Detection__Response_Closure)
                 (const Detection__Response *message,
                  void *closure_data);
typedef void (*Detection__AuthRequest_Closure)
                 (const Detection__AuthRequest *message,
                  void *closure_data);
typedef void (*Detection__AuthResponse_Closure)
                 (const Detection__AuthResponse *message,
                  void *closure_data);
typedef void (*Detection__PingRequest_Closure)
                 (const Detection__PingRequest *message,
                  void *closure_data);
typedef void (*Detection__PingResponse_Closure)
                 (const Detection__PingResponse *message,
                  void *closure_data);
typedef void (*Detection__GetAcceleratorInfoRequest_Closure)
                 (const Detection__GetAcceleratorInfoRequest *message,
                  void *closure_data);
typedef void (*Detection__GetAcceleratorInfoResponse_Closure)
                 (const Detection__GetAcceleratorInfoResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Detection__DetectionService_Service Detection__DetectionService_Service;
struct _Detection__DetectionService_Service
{
  ProtobufCService base;
  void (*auth)(Detection__DetectionService_Service *service,
               const Detection__AuthRequest *input,
               Detection__AuthResponse_Closure closure,
               void *closure_data);
  void (*detect)(Detection__DetectionService_Service *service,
                 const Detection__Request *input,
                 Detection__Response_Closure closure,
                 void *closure_data);
  void (*ping)(Detection__DetectionService_Service *service,
               const Detection__PingRequest *input,
               Detection__PingResponse_Closure closure,
               void *closure_data);
  void (*get_accelerator_info)(Detection__DetectionService_Service *service,
                               const Detection__GetAcceleratorInfoRequest *input,
                               Detection__GetAcceleratorInfoResponse_Closure closure,
                               void *closure_data);
};
typedef void (*Detection__DetectionService_ServiceDestroy)(Detection__DetectionService_Service *);
void detection__detection_service__init (Detection__DetectionService_Service *service,
                                         Detection__DetectionService_ServiceDestroy destroy);
#define DETECTION__DETECTION_SERVICE__BASE_INIT \
    { &detection__detection_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define DETECTION__DETECTION_SERVICE__INIT(function_prefix__) \
    { DETECTION__DETECTION_SERVICE__BASE_INIT,\
      function_prefix__ ## auth,\
      function_prefix__ ## detect,\
      function_prefix__ ## ping,\
      function_prefix__ ## get_accelerator_info  }
void detection__detection_service__auth(ProtobufCService *service,
                                        const Detection__AuthRequest *input,
                                        Detection__AuthResponse_Closure closure,
                                        void *closure_data);
void detection__detection_service__detect(ProtobufCService *service,
                                          const Detection__Request *input,
                                          Detection__Response_Closure closure,
                                          void *closure_data);
void detection__detection_service__ping(ProtobufCService *service,
                                        const Detection__PingRequest *input,
                                        Detection__PingResponse_Closure closure,
                                        void *closure_data);
void detection__detection_service__get_accelerator_info(ProtobufCService *service,
                                                        const Detection__GetAcceleratorInfoRequest *input,
                                                        Detection__GetAcceleratorInfoResponse_Closure closure,
                                                        void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor detection__request__descriptor;
extern const ProtobufCMessageDescriptor detection__box__descriptor;
extern const ProtobufCMessageDescriptor detection__response__descriptor;
extern const ProtobufCMessageDescriptor detection__auth_request__descriptor;
extern const ProtobufCMessageDescriptor detection__auth_response__descriptor;
extern const ProtobufCMessageDescriptor detection__ping_request__descriptor;
extern const ProtobufCMessageDescriptor detection__ping_response__descriptor;
extern const ProtobufCMessageDescriptor detection__get_accelerator_info_request__descriptor;
extern const ProtobufCMessageDescriptor detection__get_accelerator_info_response__descriptor;
extern const ProtobufCServiceDescriptor detection__detection_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_api_2eproto__INCLUDED */
